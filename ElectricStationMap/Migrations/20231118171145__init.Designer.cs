// <auto-generated />
using System;
using ElectricStationMap;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ElectricStationMap.Migrations
{
    [DbContext(typeof(ElectricStationMapDBContext))]
    [Migration("20231118171145__init")]
    partial class _init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.14");

            modelBuilder.Entity("ElectricStationMap.Models.EntityFramework.RequestInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("ElectricStationMap.Models.EntityFramework.RequirementInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("IconUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RequestInfoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RequestInfoId");

                    b.ToTable("Requirements");
                });

            modelBuilder.Entity("ElectricStationMap.Models.EntityFramework.RequirementInfo", b =>
                {
                    b.HasOne("ElectricStationMap.Models.EntityFramework.RequestInfo", "RequestInfo")
                        .WithMany("Requirements")
                        .HasForeignKey("RequestInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RequestInfo");
                });

            modelBuilder.Entity("ElectricStationMap.Models.EntityFramework.RequestInfo", b =>
                {
                    b.Navigation("Requirements");
                });
#pragma warning restore 612, 618
        }
    }
}
